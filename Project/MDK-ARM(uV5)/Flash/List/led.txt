; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\led.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\led.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\User\usb_virture_com -I..\..\User -I..\..\User\bsp -I..\..\User\Driver\IIC -I..\..\User\Driver\LED -I..\..\User\Driver\TIM -I..\..\User\Driver\Delay -I..\..\User\Driver\UART -I..\..\User\Driver\MOTOR -I..\..\User\Driver\PWM_IN -I..\..\User\Driver\EEPROM -I..\..\User\Algorithm\Algorithm_filter -I..\..\User\Algorithm\Algorithm_math -I..\..\User\Algorithm\Algorithm_sqLite -I..\..\User\Algorithm\Algorithm_quaternion -I..\..\User\Function\MultiRotor_rc -I..\..\User\Function\MultiRotor_app -I..\..\User\Function\MultiRotor_ahrs -I..\..\User\Function\MultiRotor_radio -I..\..\User\Function\MultiRotor_control -I..\..\User\Driver\STMFLASH -I..\..\User\Function\MultiRotor_altitute -I..\..\User\Modules\Modules_ultrasonic -I..\..\User\ANO_DT -I..\..\User\Driver\Modules_hmc5883 -I..\..\User\Driver\Modules_mpu6050 -I..\..\User\Driver\Modules_ms5611 -I..\..\User\Driver\Modules_oled -I..\..\User\Driver\Modules_ultrasonic -I..\..\User\Function\Heigh -I"C:\Users\Administrator\Desktop\机器人课飞控\机器人课无人机原始程序 - 副本\Project\MDK-ARM(uV5)\RTE" -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\led.crf ..\..\User\Driver\LED\led.c]
                          THUMB

                          AREA ||i.FailSafeLEDAlarm||, CODE, READONLY, ALIGN=2

                  FailSafeLEDAlarm PROC
;;;129    /*====================================================================================================*/
;;;130    void FailSafeLEDAlarm(void)
000000  b510              PUSH     {r4,lr}
;;;131    {
;;;132    	if(flag.ARMED)
000002  481a              LDR      r0,|L1.108|
000004  7940              LDRB     r0,[r0,#5]  ; flag
000006  b110              CBZ      r0,|L1.14|
;;;133    		LED.event=Ht_ARMED;//解锁了
000008  2000              MOVS     r0,#0
00000a  4919              LDR      r1,|L1.112|
00000c  7008              STRB     r0,[r1,#0]
                  |L1.14|
;;;134    	
;;;135    	if(!flag.ARMED)
00000e  4817              LDR      r0,|L1.108|
000010  7940              LDRB     r0,[r0,#5]  ; flag
000012  b910              CBNZ     r0,|L1.26|
;;;136    		LED.event=Ht_DISARMED;//没解锁
000014  2001              MOVS     r0,#1
000016  4916              LDR      r1,|L1.112|
000018  7008              STRB     r0,[r1,#0]
                  |L1.26|
;;;137    	
;;;138    	if(flag.calibratingA)
00001a  4814              LDR      r0,|L1.108|
00001c  79c0              LDRB     r0,[r0,#7]  ; flag
00001e  b110              CBZ      r0,|L1.38|
;;;139    		LED.event=Ht_CALIBRATA;
000020  2002              MOVS     r0,#2
000022  4913              LDR      r1,|L1.112|
000024  7008              STRB     r0,[r1,#0]
                  |L1.38|
;;;140    	
;;;141    	if(flag.calibratingG)		
000026  4811              LDR      r0,|L1.108|
000028  7a80              LDRB     r0,[r0,#0xa]  ; flag
00002a  b110              CBZ      r0,|L1.50|
;;;142     		 LED.event=Ht_CALIBRATG;
00002c  2003              MOVS     r0,#3
00002e  4910              LDR      r1,|L1.112|
000030  7008              STRB     r0,[r1,#0]
                  |L1.50|
;;;143    	
;;;144    	if(flag.calibratingM){
000032  480e              LDR      r0,|L1.108|
000034  7a00              LDRB     r0,[r0,#8]  ; flag
000036  b1a8              CBZ      r0,|L1.100|
;;;145    		switch(flag.calibratingM)
000038  480c              LDR      r0,|L1.108|
00003a  7a00              LDRB     r0,[r0,#8]  ; flag
00003c  2801              CMP      r0,#1
00003e  d004              BEQ      |L1.74|
000040  2802              CMP      r0,#2
000042  d006              BEQ      |L1.82|
000044  2803              CMP      r0,#3
000046  d10c              BNE      |L1.98|
000048  e007              B        |L1.90|
                  |L1.74|
;;;146     	  {
;;;147    			case 1:LED.event=Ht_CALIBRATM_X; break;
00004a  2004              MOVS     r0,#4
00004c  4908              LDR      r1,|L1.112|
00004e  7008              STRB     r0,[r1,#0]
000050  e007              B        |L1.98|
                  |L1.82|
;;;148    			case 2:LED.event=Ht_CALIBRATM_Y; break;
000052  2005              MOVS     r0,#5
000054  4906              LDR      r1,|L1.112|
000056  7008              STRB     r0,[r1,#0]
000058  e003              B        |L1.98|
                  |L1.90|
;;;149    			case 3:LED.event=Ht_CALIBRATM_Z; break;
00005a  2006              MOVS     r0,#6
00005c  4904              LDR      r1,|L1.112|
00005e  7008              STRB     r0,[r1,#0]
000060  bf00              NOP      
                  |L1.98|
000062  bf00              NOP                            ;147
                  |L1.100|
;;;150    		}
;;;151    	}
;;;152    	LED_Fsm();
000064  f7fffffe          BL       LED_Fsm
;;;153    }
000068  bd10              POP      {r4,pc}
;;;154    
                          ENDP

00006a  0000              DCW      0x0000
                  |L1.108|
                          DCD      flag
                  |L1.112|
                          DCD      LED

                          AREA ||i.LEDReflash||, CODE, READONLY, ALIGN=2

                  LEDReflash PROC
;;;57     
;;;58     void LEDReflash(void)
000000  b510              PUSH     {r4,lr}
;;;59     {
;;;60     	if(LEDBuf.bits.R)
000002  4815              LDR      r0,|L2.88|
000004  7800              LDRB     r0,[r0,#0]  ; LEDBuf
000006  f0000001          AND      r0,r0,#1
00000a  b120              CBZ      r0,|L2.22|
;;;61     		Ledr_on;
00000c  2101              MOVS     r1,#1
00000e  4813              LDR      r0,|L2.92|
000010  f7fffffe          BL       GPIO_ResetBits
000014  e003              B        |L2.30|
                  |L2.22|
;;;62     	else
;;;63     		Ledr_off;
000016  2101              MOVS     r1,#1
000018  4810              LDR      r0,|L2.92|
00001a  f7fffffe          BL       GPIO_SetBits
                  |L2.30|
;;;64     
;;;65     	if(LEDBuf.bits.G)
00001e  480e              LDR      r0,|L2.88|
000020  7800              LDRB     r0,[r0,#0]  ; LEDBuf
000022  f3c00040          UBFX     r0,r0,#1,#1
000026  b120              CBZ      r0,|L2.50|
;;;66     		Ledg_on;
000028  2102              MOVS     r1,#2
00002a  480c              LDR      r0,|L2.92|
00002c  f7fffffe          BL       GPIO_ResetBits
000030  e003              B        |L2.58|
                  |L2.50|
;;;67     	else
;;;68     		Ledg_off;
000032  2102              MOVS     r1,#2
000034  4809              LDR      r0,|L2.92|
000036  f7fffffe          BL       GPIO_SetBits
                  |L2.58|
;;;69     
;;;70     	if(LEDBuf.bits.B)
00003a  4807              LDR      r0,|L2.88|
00003c  7800              LDRB     r0,[r0,#0]  ; LEDBuf
00003e  f3c00080          UBFX     r0,r0,#2,#1
000042  b120              CBZ      r0,|L2.78|
;;;71     		Ledb_on;
000044  2104              MOVS     r1,#4
000046  4805              LDR      r0,|L2.92|
000048  f7fffffe          BL       GPIO_ResetBits
00004c  e003              B        |L2.86|
                  |L2.78|
;;;72     	else
;;;73     		Ledb_off;
00004e  2104              MOVS     r1,#4
000050  4802              LDR      r0,|L2.92|
000052  f7fffffe          BL       GPIO_SetBits
                  |L2.86|
;;;74     }
000056  bd10              POP      {r4,pc}
;;;75     void LED_Fsm(void)
                          ENDP

                  |L2.88|
                          DCD      LEDBuf
                  |L2.92|
                          DCD      0x40011400

                          AREA ||i.LED_Fsm||, CODE, READONLY, ALIGN=2

                  LED_Fsm PROC
;;;74     }
;;;75     void LED_Fsm(void)
000000  b510              PUSH     {r4,lr}
;;;76     {
;;;77      	switch(LED.event)
000002  482f              LDR      r0,|L3.192|
000004  7800              LDRB     r0,[r0,#0]  ; LED
000006  2807              CMP      r0,#7
000008  d255              BCS      |L3.182|
00000a  e8dff000          TBB      [pc,r0]
00000e  0422              DCB      0x04,0x22
000010  40504448          DCB      0x40,0x50,0x44,0x48
000014  4c00              DCB      0x4c,0x00
;;;78      	{
;;;79     	  case Ht_ARMED:       
;;;80     			if(++LED.cnt >= 120)  
000016  482a              LDR      r0,|L3.192|
000018  8840              LDRH     r0,[r0,#2]  ; LED
00001a  1c40              ADDS     r0,r0,#1
00001c  b280              UXTH     r0,r0
00001e  4928              LDR      r1,|L3.192|
000020  8048              STRH     r0,[r1,#2]
000022  2878              CMP      r0,#0x78
000024  db01              BLT      |L3.42|
;;;81     				LED.cnt=0;
000026  2000              MOVS     r0,#0
000028  8048              STRH     r0,[r1,#2]
                  |L3.42|
;;;82     			if(LED.cnt<10 || (LED.cnt>20 && LED.cnt<30)) 
00002a  4825              LDR      r0,|L3.192|
00002c  8840              LDRH     r0,[r0,#2]  ; LED
00002e  280a              CMP      r0,#0xa
000030  db07              BLT      |L3.66|
000032  4823              LDR      r0,|L3.192|
000034  8840              LDRH     r0,[r0,#2]  ; LED
000036  2814              CMP      r0,#0x14
000038  dd07              BLE      |L3.74|
00003a  4821              LDR      r0,|L3.192|
00003c  8840              LDRH     r0,[r0,#2]  ; LED
00003e  281e              CMP      r0,#0x1e
000040  da03              BGE      |L3.74|
                  |L3.66|
;;;83     				LEDBuf.byte =LG|LB;
000042  2006              MOVS     r0,#6
000044  491f              LDR      r1,|L3.196|
000046  7008              STRB     r0,[r1,#0]
000048  e002              B        |L3.80|
                  |L3.74|
;;;84     			else
;;;85     				LEDBuf.byte =0;
00004a  2000              MOVS     r0,#0
00004c  491d              LDR      r1,|L3.196|
00004e  7008              STRB     r0,[r1,#0]
                  |L3.80|
;;;86     		break;
000050  e031              B        |L3.182|
;;;87     			
;;;88     		case Ht_DISARMED:       
;;;89     			if(++LED.cnt >= 60)
000052  481b              LDR      r0,|L3.192|
000054  8840              LDRH     r0,[r0,#2]  ; LED
000056  1c40              ADDS     r0,r0,#1
000058  b280              UXTH     r0,r0
00005a  4919              LDR      r1,|L3.192|
00005c  8048              STRH     r0,[r1,#2]
00005e  283c              CMP      r0,#0x3c
000060  db01              BLT      |L3.102|
;;;90     				LED.cnt=0;
000062  2000              MOVS     r0,#0
000064  8048              STRH     r0,[r1,#2]
                  |L3.102|
;;;91     		  if(LED.cnt<=20)
000066  4816              LDR      r0,|L3.192|
000068  8840              LDRH     r0,[r0,#2]  ; LED
00006a  2814              CMP      r0,#0x14
00006c  dc03              BGT      |L3.118|
;;;92     				LEDBuf.byte =LR;
00006e  2001              MOVS     r0,#1
000070  4914              LDR      r1,|L3.196|
000072  7008              STRB     r0,[r1,#0]
000074  e00a              B        |L3.140|
                  |L3.118|
;;;93     			else if(LED.cnt<=40)
000076  4812              LDR      r0,|L3.192|
000078  8840              LDRH     r0,[r0,#2]  ; LED
00007a  2828              CMP      r0,#0x28
00007c  dc03              BGT      |L3.134|
;;;94     				LEDBuf.byte =LG;
00007e  2002              MOVS     r0,#2
000080  4910              LDR      r1,|L3.196|
000082  7008              STRB     r0,[r1,#0]
000084  e002              B        |L3.140|
                  |L3.134|
;;;95     			else  
;;;96     				LEDBuf.byte =LB;
000086  2004              MOVS     r0,#4
000088  490e              LDR      r1,|L3.196|
00008a  7008              STRB     r0,[r1,#0]
                  |L3.140|
;;;97     		break;	
00008c  e013              B        |L3.182|
;;;98     			
;;;99     		case Ht_CALIBRATA:           
;;;100            LEDBuf.byte =LB;
00008e  2004              MOVS     r0,#4
000090  490c              LDR      r1,|L3.196|
000092  7008              STRB     r0,[r1,#0]
;;;101    	  break;
000094  e00f              B        |L3.182|
;;;102    		
;;;103     		case Ht_CALIBRATM_X:         
;;;104            LEDBuf.byte =LR;
000096  2001              MOVS     r0,#1
000098  490a              LDR      r1,|L3.196|
00009a  7008              STRB     r0,[r1,#0]
;;;105     		break;
00009c  e00b              B        |L3.182|
;;;106    		
;;;107    		case Ht_CALIBRATM_Y:         
;;;108            LEDBuf.byte =LG;
00009e  2002              MOVS     r0,#2
0000a0  4908              LDR      r1,|L3.196|
0000a2  7008              STRB     r0,[r1,#0]
;;;109     		break;
0000a4  e007              B        |L3.182|
;;;110    		
;;;111    		case Ht_CALIBRATM_Z:         
;;;112            LEDBuf.byte =LB;
0000a6  2004              MOVS     r0,#4
0000a8  4906              LDR      r1,|L3.196|
0000aa  7008              STRB     r0,[r1,#0]
;;;113     		break;
0000ac  e003              B        |L3.182|
;;;114    		
;;;115    		case Ht_CALIBRATG:         
;;;116    			  LEDBuf.byte =LR;
0000ae  2001              MOVS     r0,#1
0000b0  4904              LDR      r1,|L3.196|
0000b2  7008              STRB     r0,[r1,#0]
;;;117    		break;
0000b4  bf00              NOP      
                  |L3.182|
0000b6  bf00              NOP                            ;86
;;;118     	}
;;;119    	LEDReflash();
0000b8  f7fffffe          BL       LEDReflash
;;;120    }
0000bc  bd10              POP      {r4,pc}
;;;121    /*====================================================================================================*/
                          ENDP

0000be  0000              DCW      0x0000
                  |L3.192|
                          DCD      LED
                  |L3.196|
                          DCD      LEDBuf

                          AREA ||i.LED_GPIO_Config||, CODE, READONLY, ALIGN=2

                  LED_GPIO_Config PROC
;;;6      
;;;7      void LED_GPIO_Config(void)
000000  b508              PUSH     {r3,lr}
;;;8      {		
;;;9      	/*定义一个GPIO_InitTypeDef类型的结构体*/
;;;10     	GPIO_InitTypeDef GPIO_InitStructure;
;;;11     
;;;12     	/*开启GPIOB的外设时钟*/
;;;13     	RCC_APB2PeriphClockCmd( RCC_GPIO_LED, ENABLE); 
000002  2101              MOVS     r1,#1
000004  2020              MOVS     r0,#0x20
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;14     	RCC_APB2PeriphClockCmd( RCC_APB2Periph_GPIOE, ENABLE); 
00000a  2101              MOVS     r1,#1
00000c  2040              MOVS     r0,#0x40
00000e  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;15     	
;;;16     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);
000012  2101              MOVS     r1,#1
000014  4608              MOV      r0,r1
000016  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;17     	//设置LED使用到得管脚
;;;18     	GPIO_PinRemapConfig(GPIO_Remap_SWJ_Disable, ENABLE);
00001a  2101              MOVS     r1,#1
00001c  4812              LDR      r0,|L4.104|
00001e  f7fffffe          BL       GPIO_PinRemapConfig
;;;19       GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable , ENABLE);
000022  2101              MOVS     r1,#1
000024  4811              LDR      r0,|L4.108|
000026  f7fffffe          BL       GPIO_PinRemapConfig
;;;20     
;;;21     	/*选择要控制的GPIOC引脚*/															   
;;;22       GPIO_InitStructure.GPIO_Pin = LED_R | LED_G | LED_B;	
00002a  2007              MOVS     r0,#7
00002c  f8ad0000          STRH     r0,[sp,#0]
;;;23     
;;;24     	/*设置引脚模式为通用推挽输出*/
;;;25       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;   
000030  2010              MOVS     r0,#0x10
000032  f88d0003          STRB     r0,[sp,#3]
;;;26     
;;;27     	/*设置引脚速率为50MHz */   
;;;28       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz; 
000036  2003              MOVS     r0,#3
000038  f88d0002          STRB     r0,[sp,#2]
;;;29     
;;;30     	/*调用库函数，初始化GPIOB*/
;;;31       GPIO_Init(GPIO_LED, &GPIO_InitStructure);		  
00003c  4669              MOV      r1,sp
00003e  480c              LDR      r0,|L4.112|
000040  f7fffffe          BL       GPIO_Init
;;;32     
;;;33     	/* 关闭所有led灯	*/
;;;34     	GPIO_SetBits(GPIO_LED, LED_R | LED_G | LED_B);	
000044  2107              MOVS     r1,#7
000046  480a              LDR      r0,|L4.112|
000048  f7fffffe          BL       GPIO_SetBits
;;;35     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3 | GPIO_Pin_4 | GPIO_Pin_5 | GPIO_Pin_6| GPIO_Pin_10 | GPIO_Pin_15;	//添加板上的LED灯
00004c  f2484078          MOV      r0,#0x8478
000050  f8ad0000          STRH     r0,[sp,#0]
;;;36     	
;;;37       GPIO_Init(GPIOE, &GPIO_InitStructure);	
000054  4669              MOV      r1,sp
000056  4807              LDR      r0,|L4.116|
000058  f7fffffe          BL       GPIO_Init
;;;38       GPIO_SetBits(GPIOE, GPIO_Pin_3 | GPIO_Pin_4 | GPIO_Pin_5 | GPIO_Pin_6 | GPIO_Pin_10 | GPIO_Pin_15);	
00005c  f2484178          MOV      r1,#0x8478
000060  4804              LDR      r0,|L4.116|
000062  f7fffffe          BL       GPIO_SetBits
;;;39     }
000066  bd08              POP      {r3,pc}
;;;40     
                          ENDP

                  |L4.104|
                          DCD      0x00300400
                  |L4.108|
                          DCD      0x00300200
                  |L4.112|
                          DCD      0x40011400
                  |L4.116|
                          DCD      0x40011800

                          AREA ||i.LED_SHOW||, CODE, READONLY, ALIGN=2

                  LED_SHOW PROC
;;;40     
;;;41     void LED_SHOW(void)
000000  b510              PUSH     {r4,lr}
;;;42     {
;;;43        LED_ALLON();
000002  2107              MOVS     r1,#7
000004  4819              LDR      r0,|L5.108|
000006  f7fffffe          BL       GPIO_ResetBits
;;;44     	 delay(900);
00000a  f44f7061          MOV      r0,#0x384
00000e  f7fffffe          BL       delay
;;;45     	 LED_ALLOFF();
000012  2107              MOVS     r1,#7
000014  4815              LDR      r0,|L5.108|
000016  f7fffffe          BL       GPIO_SetBits
;;;46     	 delay(16000);
00001a  f44f507a          MOV      r0,#0x3e80
00001e  f7fffffe          BL       delay
;;;47     	 LED_ALLON();
000022  2107              MOVS     r1,#7
000024  4811              LDR      r0,|L5.108|
000026  f7fffffe          BL       GPIO_ResetBits
;;;48     	 delay(900);
00002a  f44f7061          MOV      r0,#0x384
00002e  f7fffffe          BL       delay
;;;49     	 LED_ALLOFF();
000032  2107              MOVS     r1,#7
000034  480d              LDR      r0,|L5.108|
000036  f7fffffe          BL       GPIO_SetBits
;;;50     	 delay(16000);
00003a  f44f507a          MOV      r0,#0x3e80
00003e  f7fffffe          BL       delay
;;;51     	 LED_ALLON();
000042  2107              MOVS     r1,#7
000044  4809              LDR      r0,|L5.108|
000046  f7fffffe          BL       GPIO_ResetBits
;;;52     	 delay(900);
00004a  f44f7061          MOV      r0,#0x384
00004e  f7fffffe          BL       delay
;;;53     	 LED_ALLOFF();
000052  2107              MOVS     r1,#7
000054  4805              LDR      r0,|L5.108|
000056  f7fffffe          BL       GPIO_SetBits
;;;54     	 delay(16000);
00005a  f44f507a          MOV      r0,#0x3e80
00005e  f7fffffe          BL       delay
;;;55     	 LED_ALLON();
000062  2107              MOVS     r1,#7
000064  4801              LDR      r0,|L5.108|
000066  f7fffffe          BL       GPIO_ResetBits
;;;56     }
00006a  bd10              POP      {r4,pc}
;;;57     
                          ENDP

                  |L5.108|
                          DCD      0x40011400

                          AREA ||.data||, DATA, ALIGN=1

                  LED
                          DCDU     0x00000000
                  LEDBuf
000004  00                DCB      0x00

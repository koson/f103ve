; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\ms5611.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\ms5611.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\User\usb_virture_com -I..\..\User -I..\..\User\bsp -I..\..\User\Driver\IIC -I..\..\User\Driver\LED -I..\..\User\Driver\TIM -I..\..\User\Driver\Delay -I..\..\User\Driver\UART -I..\..\User\Driver\MOTOR -I..\..\User\Driver\PWM_IN -I..\..\User\Driver\EEPROM -I..\..\User\Algorithm\Algorithm_filter -I..\..\User\Algorithm\Algorithm_math -I..\..\User\Algorithm\Algorithm_sqLite -I..\..\User\Algorithm\Algorithm_quaternion -I..\..\User\Function\MultiRotor_rc -I..\..\User\Function\MultiRotor_app -I..\..\User\Function\MultiRotor_ahrs -I..\..\User\Function\MultiRotor_radio -I..\..\User\Function\MultiRotor_control -I..\..\User\Driver\STMFLASH -I..\..\User\Function\MultiRotor_altitute -I..\..\User\Modules\Modules_ultrasonic -I..\..\User\ANO_DT -I..\..\User\Driver\Modules_hmc5883 -I..\..\User\Driver\Modules_mpu6050 -I..\..\User\Driver\Modules_ms5611 -I..\..\User\Driver\Modules_oled -I..\..\User\Driver\Modules_ultrasonic -I..\..\User\Function\Heigh -I"C:\Users\Administrator\Desktop\机器人课飞控\机器人课无人机原始程序 - 副本\Project\MDK-ARM(uV5)\RTE" -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\ms5611.crf ..\..\User\Driver\Modules_ms5611\MS5611.c]
                          THUMB

                          AREA ||i.Get_High||, CODE, READONLY, ALIGN=2

                  Get_High PROC
;;;168    ************************************************/
;;;169    void Get_High(void)//OSR为压强转换速率
000000  b510              PUSH     {r4,lr}
;;;170    {
;;;171    	static u8 Now_doing = SCTemperature;
;;;172    	static u8 flag=0;
;;;173    	switch(Now_doing)
000002  4813              LDR      r0,|L1.80|
000004  7800              LDRB     r0,[r0,#0]  ; Now_doing
000006  2801              CMP      r0,#1
000008  d002              BEQ      |L1.16|
00000a  2802              CMP      r0,#2
00000c  d117              BNE      |L1.62|
00000e  e00b              B        |L1.40|
                  |L1.16|
;;;174    	 {
;;;175    		 case SCTemperature: 
;;;176    		 {		
;;;177    			 if(flag)    MS561101BA_getPressure();			 
000010  4810              LDR      r0,|L1.84|
000012  7800              LDRB     r0,[r0,#0]  ; flag
000014  b108              CBZ      r0,|L1.26|
000016  f7fffffe          BL       MS561101BA_getPressure
                  |L1.26|
;;;178    			 MS561101BA_startConversion(MS561101BA_D2_OSR_4096);  
00001a  2058              MOVS     r0,#0x58
00001c  f7fffffe          BL       MS561101BA_startConversion
;;;179    			 Now_doing = CTemperatureing;//切换到下一个状态，温度与压力轮着测量。
000020  2002              MOVS     r0,#2
000022  490b              LDR      r1,|L1.80|
000024  7008              STRB     r0,[r1,#0]
;;;180    		 }
;;;181    		 break;
000026  e011              B        |L1.76|
                  |L1.40|
;;;182    		 case CTemperatureing: 
;;;183    		 {		
;;;184    			 MS561101BA_getTemperature();
000028  f7fffffe          BL       MS561101BA_getTemperature
;;;185    			 MS561101BA_startConversion(MS561101BA_D1_OSR_4096); 
00002c  2048              MOVS     r0,#0x48
00002e  f7fffffe          BL       MS561101BA_startConversion
;;;186    			 flag = 1;
000032  2001              MOVS     r0,#1
000034  4907              LDR      r1,|L1.84|
000036  7008              STRB     r0,[r1,#0]
;;;187    			 Now_doing = SCTemperature;
000038  4905              LDR      r1,|L1.80|
00003a  7008              STRB     r0,[r1,#0]
;;;188    		 }
;;;189    		 break;
00003c  e006              B        |L1.76|
                  |L1.62|
;;;190         default: 
;;;191    		 {
;;;192    			 Now_doing = SCTemperature; //出错了 重新开始
00003e  2001              MOVS     r0,#1
000040  4903              LDR      r1,|L1.80|
000042  7008              STRB     r0,[r1,#0]
;;;193    			 flag=0;
000044  2000              MOVS     r0,#0
000046  4903              LDR      r1,|L1.84|
000048  7008              STRB     r0,[r1,#0]
;;;194    		 }
;;;195     		 break;			 
00004a  bf00              NOP      
                  |L1.76|
00004c  bf00              NOP                            ;181
;;;196    	 }
;;;197    }
00004e  bd10              POP      {r4,pc}
                          ENDP

                  |L1.80|
                          DCD      Now_doing
                  |L1.84|
                          DCD      flag

                          AREA ||i.MS561101BA_RESET||, CODE, READONLY, ALIGN=1

                  MS561101BA_RESET PROC
;;;46     *******************************************************************************/
;;;47     void MS561101BA_RESET(void)
000000  b510              PUSH     {r4,lr}
;;;48     {
;;;49       I2C_Start();
000002  f7fffffe          BL       I2C_Start
;;;50     	I2C_SendByte(MS561101BA_SlaveAddress);
000006  20ee              MOVS     r0,#0xee
000008  f7fffffe          BL       I2C_SendByte
;;;51     	I2C_WaitAck();
00000c  f7fffffe          BL       I2C_WaitAck
;;;52     	I2C_SendByte(MS561101BA_RST);
000010  201e              MOVS     r0,#0x1e
000012  f7fffffe          BL       I2C_SendByte
;;;53     	I2C_WaitAck();
000016  f7fffffe          BL       I2C_WaitAck
;;;54     	I2C_Stop();
00001a  f7fffffe          BL       I2C_Stop
;;;55     }
00001e  bd10              POP      {r4,pc}
;;;56     void MS561101BA_startConversion(uint8_t command) 
                          ENDP


                          AREA ||i.MS561101BA_getConversion||, CODE, READONLY, ALIGN=1

                  MS561101BA_getConversion PROC
;;;65     
;;;66     unsigned long MS561101BA_getConversion(void) 
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;67     {
;;;68     	unsigned long conversion = 0;
000004  2500              MOVS     r5,#0
;;;69     	uint8_t conv1,conv2,conv3; 
;;;70     	
;;;71     	I2C_Start();
000006  f7fffffe          BL       I2C_Start
;;;72     	I2C_SendByte(MS561101BA_SlaveAddress);
00000a  20ee              MOVS     r0,#0xee
00000c  f7fffffe          BL       I2C_SendByte
;;;73     	I2C_WaitAck();
000010  f7fffffe          BL       I2C_WaitAck
;;;74     	I2C_SendByte(0);
000014  2000              MOVS     r0,#0
000016  f7fffffe          BL       I2C_SendByte
;;;75     	I2C_WaitAck();
00001a  f7fffffe          BL       I2C_WaitAck
;;;76       I2C_Stop();
00001e  f7fffffe          BL       I2C_Stop
;;;77     
;;;78     	I2C_Start();
000022  f7fffffe          BL       I2C_Start
;;;79     	I2C_SendByte(MS561101BA_SlaveAddress+1);//+1是读
000026  20ef              MOVS     r0,#0xef
000028  f7fffffe          BL       I2C_SendByte
;;;80     	I2C_WaitAck();
00002c  f7fffffe          BL       I2C_WaitAck
;;;81     	conv1=I2C_RadeByte();
000030  f7fffffe          BL       I2C_RadeByte
000034  4606              MOV      r6,r0
;;;82     	I2C_Ack();
000036  f7fffffe          BL       I2C_Ack
;;;83     	conv2=I2C_RadeByte();
00003a  f7fffffe          BL       I2C_RadeByte
00003e  4604              MOV      r4,r0
;;;84     	I2C_Ack();
000040  f7fffffe          BL       I2C_Ack
;;;85     	conv3=I2C_RadeByte();
000044  f7fffffe          BL       I2C_RadeByte
000048  4607              MOV      r7,r0
;;;86     
;;;87     	I2C_NoAck();
00004a  f7fffffe          BL       I2C_NoAck
;;;88     	I2C_Stop();
00004e  f7fffffe          BL       I2C_Stop
;;;89     
;;;90     	conversion=conv1*65535+conv2*256+conv3;
000052  ebc64006          RSB      r0,r6,r6,LSL #16
000056  eb002004          ADD      r0,r0,r4,LSL #8
00005a  19c5              ADDS     r5,r0,r7
;;;91     	return conversion;
00005c  4628              MOV      r0,r5
;;;92     }
00005e  e8bd81f0          POP      {r4-r8,pc}
;;;93     
                          ENDP


                          AREA ||i.MS561101BA_getPressure||, CODE, READONLY, ALIGN=2

                  MS561101BA_getPressure PROC
;;;122    ************************************************/
;;;123    void MS561101BA_getPressure(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;124    {
000004  b087              SUB      sp,sp,#0x1c
;;;125    	uint32_t sum=0,max=0,min=200000;
000006  2400              MOVS     r4,#0
000008  2500              MOVS     r5,#0
00000a  f8df8274          LDR      r8,|L4.640|
;;;126    	static u8 p=0;
;;;127    	static u16 inum;
;;;128    //	float height_temp;
;;;129    	D1_Pres= MS561101BA_getConversion();
00000e  f7fffffe          BL       MS561101BA_getConversion
000012  499c              LDR      r1,|L4.644|
000014  6008              STR      r0,[r1,#0]  ; D1_Pres
;;;130    	I2C_delay();
000016  f7fffffe          BL       I2C_delay
;;;131    	OFF_=(uint32_t)Cal_C[2]*65536+((uint32_t)Cal_C[4]*dT)/128;
00001a  489b              LDR      r0,|L4.648|
00001c  6900              LDR      r0,[r0,#0x10]  ; Cal_C
00001e  2300              MOVS     r3,#0
000020  499a              LDR      r1,|L4.652|
000022  e9d12100          LDRD     r2,r1,[r1,#0]
000026  fba06b02          UMULL    r6,r11,r0,r2
00002a  fb03b202          MLA      r2,r3,r2,r11
00002e  fb012100          MLA      r1,r1,r0,r2
000032  2280              MOVS     r2,#0x80
000034  4630              MOV      r0,r6
000036  f7fffffe          BL       __aeabi_uldivmod
00003a  4a93              LDR      r2,|L4.648|
00003c  8912              LDRH     r2,[r2,#8]  ; Cal_C
00003e  0412              LSLS     r2,r2,#16
000040  eb100902          ADDS     r9,r0,r2
000044  f1410100          ADC      r1,r1,#0
000048  4648              MOV      r0,r9
00004a  f7fffffe          BL       __aeabi_ul2d
00004e  4a90              LDR      r2,|L4.656|
000050  c203              STM      r2!,{r0,r1}
;;;132    	SENS=(uint32_t)Cal_C[1]*32768+((uint32_t)Cal_C[3]*dT)/256;
000052  488d              LDR      r0,|L4.648|
000054  68c0              LDR      r0,[r0,#0xc]  ; Cal_C
000056  2300              MOVS     r3,#0
000058  4a8c              LDR      r2,|L4.652|
00005a  e9d21c00          LDRD     r1,r12,[r2,#0]
00005e  fba06901          UMULL    r6,r9,r0,r1
000062  fb039101          MLA      r1,r3,r1,r9
000066  fb00110c          MLA      r1,r0,r12,r1
00006a  f44f7280          MOV      r2,#0x100
00006e  4630              MOV      r0,r6
000070  f7fffffe          BL       __aeabi_uldivmod
000074  4a84              LDR      r2,|L4.648|
000076  6852              LDR      r2,[r2,#4]  ; Cal_C
000078  03d2              LSLS     r2,r2,#15
00007a  1880              ADDS     r0,r0,r2
00007c  f1410100          ADC      r1,r1,#0
000080  4a84              LDR      r2,|L4.660|
000082  c203              STM      r2!,{r0,r1}
;;;133    
;;;134    	if(TEMP<2000)
000084  4884              LDR      r0,|L4.664|
000086  e9d02000          LDRD     r2,r0,[r0,#0]
00008a  f44f63fa          MOV      r3,#0x7d0
00008e  1ad2              SUBS     r2,r2,r3
000090  f1700000          SBCS     r0,r0,#0
000094  d249              BCS      |L4.298|
;;;135    	{
;;;136    		Aux = TEMP*TEMP;
000096  4880              LDR      r0,|L4.664|
000098  e9d01000          LDRD     r1,r0,[r0,#0]
00009c  fba12701          UMULL    r2,r7,r1,r1
0000a0  fb007701          MLA      r7,r0,r1,r7
0000a4  fb017100          MLA      r1,r1,r0,r7
0000a8  4610              MOV      r0,r2
0000aa  f7fffffe          BL       __aeabi_ul2f
0000ae  497b              LDR      r1,|L4.668|
0000b0  6008              STR      r0,[r1,#0]  ; Aux
;;;137    		OFF2 = 2.5*Aux;
0000b2  4608              MOV      r0,r1
0000b4  6800              LDR      r0,[r0,#0]  ; Aux
0000b6  f7fffffe          BL       __aeabi_f2d
0000ba  4681              MOV      r9,r0
0000bc  2200              MOVS     r2,#0
0000be  4b78              LDR      r3,|L4.672|
0000c0  f7fffffe          BL       __aeabi_dmul
0000c4  4606              MOV      r6,r0
0000c6  f7fffffe          BL       __aeabi_d2uiz
0000ca  4976              LDR      r1,|L4.676|
0000cc  6008              STR      r0,[r1,#0]  ; OFF2
;;;138    		SENS2 = 1.25*Aux;
0000ce  4873              LDR      r0,|L4.668|
0000d0  6800              LDR      r0,[r0,#0]  ; Aux
0000d2  f7fffffe          BL       __aeabi_f2d
0000d6  4606              MOV      r6,r0
0000d8  2200              MOVS     r2,#0
0000da  4b73              LDR      r3,|L4.680|
0000dc  f7fffffe          BL       __aeabi_dmul
0000e0  4681              MOV      r9,r0
0000e2  f7fffffe          BL       __aeabi_d2uiz
0000e6  4971              LDR      r1,|L4.684|
0000e8  6008              STR      r0,[r1,#0]  ; SENS2
;;;139    		TEMP = TEMP - TEMP2;
0000ea  486b              LDR      r0,|L4.664|
0000ec  e9d03100          LDRD     r3,r1,[r0,#0]
0000f0  486f              LDR      r0,|L4.688|
0000f2  6800              LDR      r0,[r0,#0]  ; TEMP2
0000f4  1a18              SUBS     r0,r3,r0
0000f6  f1610100          SBC      r1,r1,#0
0000fa  4a67              LDR      r2,|L4.664|
0000fc  c203              STM      r2!,{r0,r1}
;;;140    		OFF_ = OFF_ - OFF2;
0000fe  4869              LDR      r0,|L4.676|
000100  6800              LDR      r0,[r0,#0]  ; OFF2
000102  f7fffffe          BL       __aeabi_ui2d
000106  4606              MOV      r6,r0
000108  4861              LDR      r0,|L4.656|
00010a  c80c              LDM      r0!,{r2,r3}
00010c  4630              MOV      r0,r6
00010e  f7fffffe          BL       __aeabi_drsub
000112  4a5f              LDR      r2,|L4.656|
000114  c203              STM      r2!,{r0,r1}
;;;141    		SENS = SENS - SENS2;	
000116  485f              LDR      r0,|L4.660|
000118  e9d03100          LDRD     r3,r1,[r0,#0]
00011c  4863              LDR      r0,|L4.684|
00011e  6800              LDR      r0,[r0,#0]  ; SENS2
000120  1a18              SUBS     r0,r3,r0
000122  f1610100          SBC      r1,r1,#0
000126  4a5b              LDR      r2,|L4.660|
000128  c203              STM      r2!,{r0,r1}
                  |L4.298|
;;;142    	}
;;;143      Pres_BUFFER[p] = qqp =((D1_Pres*SENS/2097152-OFF_)/32768);
00012a  4856              LDR      r0,|L4.644|
00012c  6800              LDR      r0,[r0,#0]  ; D1_Pres
00012e  2300              MOVS     r3,#0
000130  4958              LDR      r1,|L4.660|
000132  e9d12100          LDRD     r2,r1,[r1,#0]
000136  fba06b02          UMULL    r6,r11,r0,r2
00013a  fb03b202          MLA      r2,r3,r2,r11
00013e  fb012100          MLA      r1,r1,r0,r2
000142  f44f1200          MOV      r2,#0x200000
000146  4630              MOV      r0,r6
000148  f7fffffe          BL       __aeabi_uldivmod
00014c  e9cd0100          STRD     r0,r1,[sp,#0]
000150  f7fffffe          BL       __aeabi_ul2d
000154  4681              MOV      r9,r0
000156  484e              LDR      r0,|L4.656|
000158  c80c              LDM      r0!,{r2,r3}
00015a  4648              MOV      r0,r9
00015c  f7fffffe          BL       __aeabi_dsub
000160  2200              MOVS     r2,#0
000162  4b54              LDR      r3,|L4.692|
000164  e9cd0102          STRD     r0,r1,[sp,#8]
000168  f7fffffe          BL       __aeabi_ddiv
00016c  e9cd0104          STRD     r0,r1,[sp,#0x10]
000170  f7fffffe          BL       __aeabi_d2uiz
000174  4950              LDR      r1,|L4.696|
000176  6008              STR      r0,[r1,#0]  ; qqp
000178  4950              LDR      r1,|L4.700|
00017a  4a51              LDR      r2,|L4.704|
00017c  7812              LDRB     r2,[r2,#0]  ; p
00017e  f8410022          STR      r0,[r1,r2,LSL #2]
;;;144    	p++;
000182  484f              LDR      r0,|L4.704|
000184  7800              LDRB     r0,[r0,#0]  ; p
000186  1c40              ADDS     r0,r0,#1
000188  494d              LDR      r1,|L4.704|
00018a  7008              STRB     r0,[r1,#0]
;;;145    	if(p==20) p=0;
00018c  4608              MOV      r0,r1
00018e  7800              LDRB     r0,[r0,#0]  ; p
000190  2814              CMP      r0,#0x14
000192  d101              BNE      |L4.408|
000194  2000              MOVS     r0,#0
000196  7008              STRB     r0,[r1,#0]
                  |L4.408|
;;;146    	for(u8 i=0;i<20;i++) 
000198  2000              MOVS     r0,#0
00019a  e016              B        |L4.458|
                  |L4.412|
;;;147      {
;;;148    		if(Pres_BUFFER[i] > max)  max = Pres_BUFFER[i];
00019c  4947              LDR      r1,|L4.700|
00019e  f8511020          LDR      r1,[r1,r0,LSL #2]
0001a2  42a9              CMP      r1,r5
0001a4  d903              BLS      |L4.430|
0001a6  4945              LDR      r1,|L4.700|
0001a8  f8515020          LDR      r5,[r1,r0,LSL #2]
0001ac  e007              B        |L4.446|
                  |L4.430|
;;;149    		else if(Pres_BUFFER[i] < min)  min = Pres_BUFFER[i];
0001ae  4943              LDR      r1,|L4.700|
0001b0  f8511020          LDR      r1,[r1,r0,LSL #2]
0001b4  4541              CMP      r1,r8
0001b6  d202              BCS      |L4.446|
0001b8  4940              LDR      r1,|L4.700|
0001ba  f8518020          LDR      r8,[r1,r0,LSL #2]
                  |L4.446|
;;;150    		sum +=Pres_BUFFER[i];
0001be  493f              LDR      r1,|L4.700|
0001c0  f8511020          LDR      r1,[r1,r0,LSL #2]
0001c4  440c              ADD      r4,r4,r1
0001c6  1c41              ADDS     r1,r0,#1              ;146
0001c8  b2c8              UXTB     r0,r1                 ;146
                  |L4.458|
0001ca  2814              CMP      r0,#0x14              ;146
0001cc  dbe6              BLT      |L4.412|
;;;151    	}	
;;;152    	Pressure=(sum -  max -min)/18;
0001ce  1b60              SUBS     r0,r4,r5
0001d0  eba00008          SUB      r0,r0,r8
0001d4  2112              MOVS     r1,#0x12
0001d6  fbb0f0f1          UDIV     r0,r0,r1
0001da  493a              LDR      r1,|L4.708|
0001dc  6008              STR      r0,[r1,#0]  ; Pressure
;;;153    	if(Pressure>150000)Pressure=100000;//防止初始化时的值很大
0001de  4608              MOV      r0,r1
0001e0  6800              LDR      r0,[r0,#0]  ; Pressure
0001e2  4939              LDR      r1,|L4.712|
0001e4  4288              CMP      r0,r1
0001e6  d902              BLS      |L4.494|
0001e8  4838              LDR      r0,|L4.716|
0001ea  4936              LDR      r1,|L4.708|
0001ec  6008              STR      r0,[r1,#0]  ; Pressure
                  |L4.494|
;;;154    	baro_height=(Pressure_groud-Pressure)*85;//经验计算，近似高度，单位mm
0001ee  4835              LDR      r0,|L4.708|
0001f0  6800              LDR      r0,[r0,#0]  ; Pressure
0001f2  f7fffffe          BL       __aeabi_ui2f
0001f6  4607              MOV      r7,r0
0001f8  4835              LDR      r0,|L4.720|
0001fa  6801              LDR      r1,[r0,#0]  ; Pressure_groud
0001fc  4638              MOV      r0,r7
0001fe  f7fffffe          BL       __aeabi_frsub
000202  4606              MOV      r6,r0
000204  4933              LDR      r1,|L4.724|
000206  f7fffffe          BL       __aeabi_fmul
00020a  4933              LDR      r1,|L4.728|
00020c  6008              STR      r0,[r1,#0]  ; baro_height
;;;155    	if(baro_height < -200) baro_height= - 100;
00020e  4933              LDR      r1,|L4.732|
000210  4831              LDR      r0,|L4.728|
000212  6800              LDR      r0,[r0,#0]  ; baro_height
000214  f7fffffe          BL       __aeabi_cfcmple
000218  d202              BCS      |L4.544|
00021a  4831              LDR      r0,|L4.736|
00021c  492e              LDR      r1,|L4.728|
00021e  6008              STR      r0,[r1,#0]  ; baro_height
                  |L4.544|
;;;156    	
;;;157    	Baro_Height_Source=(Pressure_groud-qqp)*85;//经验计算，近似高度，单位mm
000220  4825              LDR      r0,|L4.696|
000222  6800              LDR      r0,[r0,#0]  ; qqp
000224  f7fffffe          BL       __aeabi_ui2f
000228  4607              MOV      r7,r0
00022a  4829              LDR      r0,|L4.720|
00022c  6801              LDR      r1,[r0,#0]  ; Pressure_groud
00022e  4638              MOV      r0,r7
000230  f7fffffe          BL       __aeabi_frsub
000234  4606              MOV      r6,r0
000236  4927              LDR      r1,|L4.724|
000238  f7fffffe          BL       __aeabi_fmul
00023c  4929              LDR      r1,|L4.740|
00023e  6008              STR      r0,[r1,#0]  ; Baro_Height_Source
;;;158    	if(Baro_Height_Source < -100) Baro_Height_Source= - 100;
000240  4927              LDR      r1,|L4.736|
000242  4828              LDR      r0,|L4.740|
000244  6800              LDR      r0,[r0,#0]  ; Baro_Height_Source
000246  f7fffffe          BL       __aeabi_cfcmple
00024a  d202              BCS      |L4.594|
00024c  4824              LDR      r0,|L4.736|
00024e  4925              LDR      r1,|L4.740|
000250  6008              STR      r0,[r1,#0]  ; Baro_Height_Source
                  |L4.594|
;;;159    	
;;;160    	if(inum<300){inum++;Pressure_groud=Pressure;};//自动获得地面气压
000252  4825              LDR      r0,|L4.744|
000254  8800              LDRH     r0,[r0,#0]  ; inum
000256  f5b07f96          CMP      r0,#0x12c
00025a  da0a              BGE      |L4.626|
00025c  4822              LDR      r0,|L4.744|
00025e  8800              LDRH     r0,[r0,#0]  ; inum
000260  1c40              ADDS     r0,r0,#1
000262  4921              LDR      r1,|L4.744|
000264  8008              STRH     r0,[r1,#0]
000266  4817              LDR      r0,|L4.708|
000268  6800              LDR      r0,[r0,#0]  ; Pressure
00026a  f7fffffe          BL       __aeabi_ui2f
00026e  4918              LDR      r1,|L4.720|
000270  6008              STR      r0,[r1,#0]  ; Pressure_groud
                  |L4.626|
;;;161    	
;;;162    	baro_start_f=1;
000272  2001              MOVS     r0,#1
000274  491d              LDR      r1,|L4.748|
000276  7008              STRB     r0,[r1,#0]
;;;163    }
000278  b007              ADD      sp,sp,#0x1c
00027a  e8bd8ff0          POP      {r4-r11,pc}
;;;164    /***********************************************
                          ENDP

00027e  0000              DCW      0x0000
                  |L4.640|
                          DCD      0x00030d40
                  |L4.644|
                          DCD      D1_Pres
                  |L4.648|
                          DCD      Cal_C
                  |L4.652|
                          DCD      ||dT||
                  |L4.656|
                          DCD      OFF_
                  |L4.660|
                          DCD      SENS
                  |L4.664|
                          DCD      TEMP
                  |L4.668|
                          DCD      Aux
                  |L4.672|
                          DCD      0x40040000
                  |L4.676|
                          DCD      OFF2
                  |L4.680|
                          DCD      0x3ff40000
                  |L4.684|
                          DCD      SENS2
                  |L4.688|
                          DCD      TEMP2
                  |L4.692|
                          DCD      0x40e00000
                  |L4.696|
                          DCD      qqp
                  |L4.700|
                          DCD      Pres_BUFFER
                  |L4.704|
                          DCD      |symbol_number.21|
                  |L4.708|
                          DCD      Pressure
                  |L4.712|
                          DCD      0x000249f0
                  |L4.716|
                          DCD      0x000186a0
                  |L4.720|
                          DCD      Pressure_groud
                  |L4.724|
                          DCD      0x42aa0000
                  |L4.728|
                          DCD      baro_height
                  |L4.732|
                          DCD      0xc3480000
                  |L4.736|
                          DCD      0xc2c80000
                  |L4.740|
                          DCD      Baro_Height_Source
                  |L4.744|
                          DCD      inum
                  |L4.748|
                          DCD      baro_start_f

                          AREA ||i.MS561101BA_getTemperature||, CODE, READONLY, ALIGN=2

                  MS561101BA_getTemperature PROC
;;;98     ************************************************/
;;;99     void MS561101BA_getTemperature(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;100    {  
;;;101      static u8 p=0;
;;;102    	uint32_t sum=0,max=0,min=200000000;
000004  2400              MOVS     r4,#0
000006  2500              MOVS     r5,#0
000008  f8df80b0          LDR      r8,|L5.188|
;;;103    	
;;;104    	Temp_BUFFER[p] = MS561101BA_getConversion();
00000c  f7fffffe          BL       MS561101BA_getConversion
000010  492b              LDR      r1,|L5.192|
000012  4a2c              LDR      r2,|L5.196|
000014  7812              LDRB     r2,[r2,#0]  ; p
000016  f8410022          STR      r0,[r1,r2,LSL #2]
;;;105    	p++;
00001a  482a              LDR      r0,|L5.196|
00001c  7800              LDRB     r0,[r0,#0]  ; p
00001e  1c40              ADDS     r0,r0,#1
000020  4928              LDR      r1,|L5.196|
000022  7008              STRB     r0,[r1,#0]
;;;106    	if(p==100) p=0;
000024  4608              MOV      r0,r1
000026  7800              LDRB     r0,[r0,#0]  ; p
000028  2864              CMP      r0,#0x64
00002a  d101              BNE      |L5.48|
00002c  2000              MOVS     r0,#0
00002e  7008              STRB     r0,[r1,#0]
                  |L5.48|
;;;107    	for(u8 i=0;i<100;i++) 
000030  2000              MOVS     r0,#0
000032  e016              B        |L5.98|
                  |L5.52|
;;;108      {
;;;109    		if(Temp_BUFFER[i] > max)  max = Temp_BUFFER[i];
000034  4922              LDR      r1,|L5.192|
000036  f8511020          LDR      r1,[r1,r0,LSL #2]
00003a  42a9              CMP      r1,r5
00003c  d903              BLS      |L5.70|
00003e  4920              LDR      r1,|L5.192|
000040  f8515020          LDR      r5,[r1,r0,LSL #2]
000044  e007              B        |L5.86|
                  |L5.70|
;;;110    		else if(Temp_BUFFER[i] < min)  min = Temp_BUFFER[i];
000046  491e              LDR      r1,|L5.192|
000048  f8511020          LDR      r1,[r1,r0,LSL #2]
00004c  4541              CMP      r1,r8
00004e  d202              BCS      |L5.86|
000050  491b              LDR      r1,|L5.192|
000052  f8518020          LDR      r8,[r1,r0,LSL #2]
                  |L5.86|
;;;111    		sum += Temp_BUFFER[i];
000056  491a              LDR      r1,|L5.192|
000058  f8511020          LDR      r1,[r1,r0,LSL #2]
00005c  440c              ADD      r4,r4,r1
00005e  1c41              ADDS     r1,r0,#1              ;107
000060  b2c8              UXTB     r0,r1                 ;107
                  |L5.98|
000062  2864              CMP      r0,#0x64              ;107
000064  dbe6              BLT      |L5.52|
;;;112    	}	
;;;113    	D2_Temp =(sum -  max -min)/98;
000066  1b60              SUBS     r0,r4,r5
000068  eba00008          SUB      r0,r0,r8
00006c  2162              MOVS     r1,#0x62
00006e  fbb0f0f1          UDIV     r0,r0,r1
000072  4915              LDR      r1,|L5.200|
000074  6008              STR      r0,[r1,#0]  ; D2_Temp
;;;114    	dT=D2_Temp - (((uint32_t)Cal_C[5])<<8);
000076  4815              LDR      r0,|L5.204|
000078  6940              LDR      r0,[r0,#0x14]  ; Cal_C
00007a  6809              LDR      r1,[r1,#0]  ; D2_Temp
00007c  eba12000          SUB      r0,r1,r0,LSL #8
000080  2100              MOVS     r1,#0
000082  4a13              LDR      r2,|L5.208|
000084  c203              STM      r2!,{r0,r1}
;;;115    	TEMP=2000+dT*((uint32_t)Cal_C[6])/8388608;
000086  4811              LDR      r0,|L5.204|
000088  6980              LDR      r0,[r0,#0x18]  ; Cal_C
00008a  2300              MOVS     r3,#0
00008c  4910              LDR      r1,|L5.208|
00008e  e9d12c00          LDRD     r2,r12,[r1,#0]
000092  fba06902          UMULL    r6,r9,r0,r2
000096  fb039202          MLA      r2,r3,r2,r9
00009a  fb00210c          MLA      r1,r0,r12,r2
00009e  f44f0200          MOV      r2,#0x800000
0000a2  4630              MOV      r0,r6
0000a4  f7fffffe          BL       __aeabi_uldivmod
0000a8  f44f63fa          MOV      r3,#0x7d0
0000ac  18c0              ADDS     r0,r0,r3
0000ae  f1410100          ADC      r1,r1,#0
0000b2  4a08              LDR      r2,|L5.212|
0000b4  c203              STM      r2!,{r0,r1}
;;;116    }
0000b6  e8bd87f0          POP      {r4-r10,pc}
;;;117    
                          ENDP

0000ba  0000              DCW      0x0000
                  |L5.188|
                          DCD      0x0bebc200
                  |L5.192|
                          DCD      Temp_BUFFER
                  |L5.196|
                          DCD      p
                  |L5.200|
                          DCD      D2_Temp
                  |L5.204|
                          DCD      Cal_C
                  |L5.208|
                          DCD      ||dT||
                  |L5.212|
                          DCD      TEMP

                          AREA ||i.MS561101BA_startConversion||, CODE, READONLY, ALIGN=1

                  MS561101BA_startConversion PROC
;;;55     }
;;;56     void MS561101BA_startConversion(uint8_t command) 
000000  b510              PUSH     {r4,lr}
;;;57     {	
000002  4604              MOV      r4,r0
;;;58     	I2C_Start();
000004  f7fffffe          BL       I2C_Start
;;;59     	I2C_SendByte(MS561101BA_SlaveAddress);
000008  20ee              MOVS     r0,#0xee
00000a  f7fffffe          BL       I2C_SendByte
;;;60     	I2C_WaitAck();
00000e  f7fffffe          BL       I2C_WaitAck
;;;61     	I2C_SendByte(command);
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       I2C_SendByte
;;;62       I2C_WaitAck();
000018  f7fffffe          BL       I2C_WaitAck
;;;63     	I2C_Stop();
00001c  f7fffffe          BL       I2C_Stop
;;;64     }
000020  bd10              POP      {r4,pc}
;;;65     
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=3

                  Cal_C
                          %        28
                  Pres_BUFFER
                          %        80
                  Temp_BUFFER
                          %        404
                  Pressure_Filterbuffer
                          %        80

                          AREA ||.data||, DATA, ALIGN=3

                  OFF_
                          %        8
                  Aux
                          DCD      0x00000000
                          DCD      0x00000000
                  ||dT||
                          %        8
                  TEMP
                          %        8
                  OFf
                          %        8
                  SENS
                          %        8
                  D1_Pres
                          DCD      0x00000000
                  D2_Temp
                          DCD      0x00000000
                  Pressure
                          DCD      0x00000000
                  Pressure_old
                          DCD      0x00000000
                  qqp
                          DCD      0x00000000
                  TEMP2
                          DCD      0x00000000
                  ||T2||
                          DCD      0x00000000
                  OFF2
                          DCD      0x00000000
                  SENS2
                          DCD      0x00000000
                          DCD      0x00000000
                  IPressure
                          %        8
                  DPressure
                          %        8
                  Pressure_error
                          %        8
                  Pressure_out
                          %        8
                  Pressure_new
                          %        8
                  Pressure_last
                          %        8
                  lockpressure
000088  c8000000          DCB      0xc8,0x00,0x00,0x00
                  Baro_Height_Source
                          DCD      0x00000000
                  baro_dis_old
                          DCD      0x00000000
                  baro_dis_delta
                          DCD      0x00000000
                  baro_start_f
000098  00                DCB      0x00
                  p
000099  00                DCB      0x00
                  |symbol_number.21|
00009a  0000              DCB      0x00,0x00
                  inum
00009c  0000              DCB      0x00,0x00
                  Now_doing
00009e  01                DCB      0x01
                  flag
00009f  00                DCB      0x00
